# Generated file, please do not edit.
# Use the Pollux tool instead.
AbstractFragment.CompatibleMmVersion=The ''{0}'' fragment ''{1} v{2}'' metamodel is outdated but compatible with ''{1} v{3}''.
AbstractFragment.FutureMmVersion=The ''{0}'' fragment ''{1} v{2}'' metamodel comes from a newer Modelio than the current ''{1}'' metamodel ({3}). \nGet the latest version of Modelio to open it.
AbstractFragment.MissingMetamodelFragment=The ''{0}'' fragment needs the  ''{1} v{2}'' metamodel, which is missing.\nYou may need to deploy an additional module to get it.
AbstractFragment.MmVersionNotSupported=The ''{0}'' fragment''s ''{1} v{2}'' metamodel is outdated compared to the current ''{1} v{3}'' version.

BasicMigrationReporter.logFileWritten=A migration log file has been written in "{0}".

ChainedExmlFragmentMigrator.MigrationFailed=''{0}'' repository migration failed\: {1}
ChainedExmlFragmentMigrator.SaveMmVersionNeeded=The new metamodel version will be recorded.\nThis model will then not be accessible anymore by previous Modelio or modules versions.
ChainedMofFragmentMigrator.detail.first=The ''{0}'' model will be migrated\:\n   from\: {1}\n   to\:   {2}\nwith the following steps\:
ChainedMofFragmentMigrator.detail.migratorline=from ''{1}'' to ''{2}''
ChainedMofFragmentMigrator.mon.migratingTowardVersion=Migrating ''{0}'' model toward ''{1}'' metamodel ...
ChainedMofFragmentMigrator.mon.migration=Migrating ''{0}'' model ...
ChainedMofFragmentMigrator.noMigrationChainFound=No migration process found to migrate ''{0}'' fragment from ''{1}'' to ''{2}''.

ExmlFragment.RepositoryFormatNeedMigration=The ''{0}'' repository needs to be migrated from format {1} to {2}.

FileModuleStore.unzippingJMdac=Extracting ''{0}'' file ...
FileModuleStoreEntry.doesNotContainDirectory=''{0}'' does not contain any directory.
FragmentConflictException=The ''{0}'' fragment conflicts with the already registered ''{1}'' fragment.
FragmentMigrationNeededException.message=The ''{0}'' model needs to be migrated\:\n   from\: {1}\n   to\:   {2}
FragmentMigratorWithBackup.mon.archiveBackup=Archiving ''{0}'' model backup to ''{1}'' ...
FragmentMigratorWithBackup.mon.deleteBackupArchive=Deleting ''{0}'' model backup archive from ''{1}'' ...
FragmentMigratorWithBackup.mon.migration=Migration of ''{0}'' model...
FragmentMigratorWithBackup.mon.restoreBackup=Restoring ''{0}'' model backup from ''{1}'' ...
FragmentMigratorWithBackup.mon.restoreBackup.done=Restored ''{0}'' model from backup.
FragmentMigratorWithBackup.restoreBackupFailed=Failed restoring ''{0}'' backup\: {1}\nYou will have to move manually the ''{2}'' directory to ''{1}'' before trying again.

GProject.modelioTooOld=The ''{0}'' project has been created with Modelio {1} and is not compatible with Modelio {2}.\r\nPlease update Modelio to the {1} version in order to open this project.
GProject.mountingDefaultMetamodel=Loading UML metamodel...
GProject.mountingDefaultRepositories=Mounting default repositories...
GProject.mountingMetamodelFragment=Loading {0} metamodel...
GProject.mountingModules=Mounting modules...
GProject.projectTooOld=The ''{0}'' project has been created before Modelio 3.4.01 and is not compatible with Modelio {1}.\r\nYou must open this project with Modelio 4 before using it with Modelio {1}.
GProject.serverVersionDoesNotMatch=The ''{0}'' Modelio Server project is configured to be open with Modelio {1}.\r\nYou cannot open it with Modelio {2}.\r\nUse Modelio {1} to open it, or migrate it to the {2} version in Modelio Server and join it again.
GProjectConfigurer.AddingFragment=Adding ''{0}'' fragment...
GProjectConfigurer.DeletingFragment=Deleting ''{0}'' fragment data ...
GProjectConfigurer.RemovingFragment=Removing ''{0}'' fragment...
GProjectConfigurer.Synchronizing=Synchronizing ''{0}'' project ...
GProjectConfigurer.SynchronizingFragment=Synchronizing ''{0}'' fragment...
GProjectFormatMigrator4.moving=Project migration\: moving ''{0}'' to ''{1}''...

ModelComponent.BadModelComponentFiles=''{0}'' model component artifact\: '{'{1}({2})'}' tag must have an even number of parameters.
ModuleCacheManager.ErrorReadingModule=Failed reading ''{0}'' module file\: {1}
ModuleCacheManager.FailedExtractStaticModel=Failed extracting static model from ''{0}''\:\n {1}
ModuleCacheManager.InvalidMmFragmentVersion=''{0}'' metamodel fragment ''{1}'' version has invalid format\: {2}
ModuleCacheManager.NoModuleFound=No Modelio module.xml found in ''{0}'' file.

ProjectLock.failure=Couldn''t lock the ''{0}'' project \: {1}
ProjectLock.otherVm=The ''{0}'' project is already open by another Modelio instance.\nIt is locked by ''{3}'' on ''{2}''({1}) since {4,date} at {4,time}.
ProjectLock.sameVm=The ''{0}'' project is already open by this Modelio instance.
ProjectSynchro.updateModule=Updating ''{0}'' v{1} module to v{2}...

RamcFileFragment.DeployRamcFiles=Deploying ''{0}'' exported files ...
RamcFileFragment.ExtractRamcFrom=Extracting ''{0}'' model component from {1} ...
RamcFileFragment.InvalidUri=Invalid ''{0}'' URI \: {1}
RamcPackager.ArchiveModelComponent=Archiving RAMC to {0}...
RamcPackager.ExportFiles=Exporting files...
RamcPackager.ExportModel=Exporting model...

UnsupportedFragment.DownCause=The ''{0}'' fragment type is not supported.
