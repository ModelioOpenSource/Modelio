/* 
 * Copyright 2013-2020 Modeliosoft
 * 
 * This file is part of Modelio.
 * 
 * Modelio is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * Modelio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Modelio.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.12.02 at 02:29:48 PM CET
//
package org.modelio.bpmnxml.model;

import com.modeliosoft.modelio.javadesigner.annotations.objid;
import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;

/**
 * <p>Java class for tMultiInstanceFlowCondition.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="tMultiInstanceFlowCondition">
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 * &lt;enumeration value="None"/>
 * &lt;enumeration value="One"/>
 * &lt;enumeration value="All"/>
 * &lt;enumeration value="Complex"/>
 * &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 */
@objid ("a82c8f7b-9f1a-4300-bfa1-1677c432380c")
@XmlType(name = "tMultiInstanceFlowCondition")
@XmlEnum
public enum TMultiInstanceFlowCondition {
    @objid ("65b12cd6-eb19-4906-ba78-81dfe87781ac")
    @XmlEnumValue("None")
    NONE("None"),
    @objid ("25f47f4c-7f42-422d-be6f-cf4587078a69")
    @XmlEnumValue("One")
    ONE("One"),
    @objid ("a9916131-396d-4a1b-8127-e469a56a2d54")
    @XmlEnumValue("All")
    ALL("All"),
    @objid ("25aaf2c6-7485-43ce-bb53-effebc3f7f10")
    @XmlEnumValue("Complex")
    COMPLEX("Complex");

    @objid ("1a2c0bd8-0181-4669-83b0-c8db38ae5c13")
    private final String value;

    @objid ("1c06f623-6c55-4e73-b817-e2a1e2dc12ae")
     TMultiInstanceFlowCondition(String v) {
        this.value = v;
    }

    @objid ("f665d8a4-33d8-47a0-a665-61764938a4c1")
    public String value() {
        return this.value;
    }

    @objid ("75437b8a-0222-44fc-b2fc-8100972672d4")
    public static TMultiInstanceFlowCondition fromValue(String v) {
        for (TMultiInstanceFlowCondition c: TMultiInstanceFlowCondition.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
        
    }

}
