/* 
 * Copyright 2013-2020 Modeliosoft
 * 
 * This file is part of Modelio.
 * 
 * Modelio is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * Modelio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Modelio.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.12.02 at 02:29:48 PM CET
//
package org.modelio.bpmnxml.model;

import com.modeliosoft.modelio.javadesigner.annotations.objid;
import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;

/**
 * <p>Java class for tEventBasedGatewayType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="tEventBasedGatewayType">
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 * &lt;enumeration value="Exclusive"/>
 * &lt;enumeration value="Parallel"/>
 * &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 */
@objid ("4cfb7056-65a1-4f5b-a0af-fbb676e09db3")
@XmlType(name = "tEventBasedGatewayType")
@XmlEnum
public enum TEventBasedGatewayType {
    @objid ("ef874c88-f438-4095-a8a5-b66f44f50ba7")
    @XmlEnumValue("Exclusive")
    EXCLUSIVE("Exclusive"),
    @objid ("2a353603-de6a-4a8b-bbae-37c4419f9939")
    @XmlEnumValue("Parallel")
    PARALLEL("Parallel");

    @objid ("0621d424-f16d-491f-9139-e8c935b4a8c4")
    private final String value;

    @objid ("8d6c2d17-fdc3-46d7-bf59-95d8b424aa73")
     TEventBasedGatewayType(String v) {
        this.value = v;
    }

    @objid ("36a226d2-11d5-4271-a071-5e79819fb988")
    public String value() {
        return this.value;
    }

    @objid ("05dcd488-b684-4610-8320-d42bcb2d5002")
    public static TEventBasedGatewayType fromValue(String v) {
        for (TEventBasedGatewayType c: TEventBasedGatewayType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
        
    }

}
